# Test code in this repo.
resources:
- repo: 'self'

# Use the default queue for simplicity.
queue:
  name: 'Test'

steps:

# # If this is a PR build, change the Build.SourceBranch to be the Pull Request Source.
# - task: jessehouwing.jessehouwing-vsts-variable-tasks.vsts-variable-set.VariableSetTask@1
#   displayName: "PR-only HACK: Set variable: Build.SourceBranch to: $(System.PullRequest.SourceBranch)"
#   inputs:
#     VariableName: Build.SourceBranch
#     Value: $(System.PullRequest.SourceBranch)
#   condition: eq(variables['Build.Reason'], 'PullRequest')

- task: JenkinsQueueJob@2
  inputs:
    serverEndpoint: 'ps-jenkins.aslab.juniper.net'
    jobName: 'nita-cli'
    captureConsole: true
    capturePipeline: true
    isParameterizedJob: true
    jobParameters: 'SOURCE_BRANCH=refs/heads/master'

# If this is a PR build, change Build.SourceVersion to: HEAD
- task: jessehouwing.jessehouwing-vsts-variable-tasks.vsts-variable-set.VariableSetTask@1
  displayName: "PR-only HACK: Set variable: Build.SourceVersion to: HEAD"
  inputs:
    VariableName: Build.SourceVersion
    Value: HEAD
  condition: eq(variables['Build.Reason'], 'PullRequest')

# When queueing the Jenkins job, must pass source branch (PR merge branch/commit is invalid).
- task: JenkinsQueueJob@2
  displayName: 'Queue Jenkins job'
  inputs:
    serverEndpoint: 'ps-jenkins.aslab.juniper.net'
    # TODO: (If copied) -- Specify the new job on Jenkins (copy from api-gateway and update).
    #       Remember to correct this name too!
    jobName: 'nita-cli'
    isParameterizedJob: 'true'
    jobParameters: |
     SOURCE_BRANCH=$(Build.SourceBranch)